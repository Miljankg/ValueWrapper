name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal tests/ValueWrapper.Tests.Unit
      env:
        CollectCoverage: true
        CoverletOutputFormat: opencover
        CoverletOutput: TestResults/
    - name: Create Test Coverage Badge
      uses: simon-k/dotnet-code-coverage-badge@v1.0.0
      id: create_coverage_badge
      with:
        label: Unit Test Coverage
        color: brightgreen
        path: tests/ValueWrapper.Tests.Unit/TestResults/coverage.opencover.xml
        gist-filename: code-coverage.json
        gist-id: 529dfecfa3844f030a36d5ed38b82945
        gist-auth-token: ${{ secrets.GIST_AUTH_TOKEN }}       
    - name: Print Unit Test Coverage
      run: echo "Code coverage percentage ${{steps.create_coverage_badge.outputs.percentage}}%"
    - name: Print badge data
      run: echo "Badge data ${{steps.test_step.outputs.badge}}"
    - name: Publish NuGet
      uses: brandedoutcast/publish-nuget@v2.5.5
      with:
        # Filepath of the project to be packaged, relative to root of repository
        PROJECT_FILE_PATH: src/ValueWrapper/ValueWrapper.csproj
        # NuGet package id, used for version detection & defaults to project name
        # PACKAGE_NAME: # optional
        # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
        # VERSION_FILE_PATH: # optional
        # Regex pattern to extract version info in a capturing group
        VERSION_REGEX: ^\s*<PackageVersion>(.*)<\/PackageVersion>\s*$ # optional, default is ^\s*<Version>(.*)<\/Version>\s*$
        # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
        # VERSION_STATIC: # optional
        # Flag to toggle git tagging, enabled by default
        TAG_COMMIT: true # optional, default is true
        # Format of the git tag, [*] gets replaced with actual version
        # TAG_FORMAT: # optional, default is v*
        # API key to authenticate with NuGet server
        NUGET_KEY: ${{ secrets.nuget_api_key }} # optional
        # NuGet server uri hosting the packages, defaults to https://api.nuget.org
        # NUGET_SOURCE: # optional, default is https://api.nuget.org
        # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
        # INCLUDE_SYMBOLS: # optional
