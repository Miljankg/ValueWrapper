name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build -c Release --no-restore
    - name: Unit Tests
      run: dotnet test --verbosity normal tests/ValueWrapper.Tests.Unit
      env:
        CollectCoverage: true
        CoverletOutput: ../../TestResults/unit-test-coverage.json
    - name: Integration Tests
      run: dotnet test --verbosity normal tests/ValueWrapper.Tests.Integration
      env:
        CollectCoverage: true
        CoverletOutputFormat: opencover
        CoverletOutput: ../../TestResults/coverage.opencover.xml
        MergeWith: ../../TestResults/unit-test-coverage.json
        Exclude: "[ValueWrapper.Tests*]*"
    - name: Create Total Test Coverage Badge
      uses: simon-k/dotnet-code-coverage-badge@v1.0.0
      id: create_total_test_coverage_badge
      with:
        label: Total Test Coverage
        color: brightgreen
        path: TestResults/coverage.opencover.xml
        gist-filename: value-wrapper-total-test-code-coverage.json
        gist-id: 279c1aef1f40f826150b879af3072c46
        gist-auth-token: ${{ secrets.GIST_AUTH_TOKEN }}       
    - name: Print Total Test Coverage
      run: echo "Code coverage percentage ${{steps.create_total_test_coverage_badge.outputs.percentage}}%"
    - name: Print Total Test Badge Data
      run: echo "Badge data ${{steps.create_total_test_coverage_badge.outputs.badge}}"
    - name: Create NuGet package
      run: dotnet pack --no-build -c Release src/ValueWrapper/ValueWrapper.csproj -o .
    - name: Publish NuGet on version change
      run: dotnet nuget push *.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }} --skip-duplicate -n   
