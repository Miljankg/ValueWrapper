namespace TestNamespace
{
    public readonly partial struct TestId : IEquatable<TestId>
    {
        public static TestId From(string value)
        {
            return new TestId(value);
        }

        public TestId(string value)
        {
            Value = value;
        }

        public string Value { get; }

        public bool Equals(TestId other)
        {
            return EqualityComparer<string>.Default.Equals(Value, other.Value);
        }

        public override bool Equals(object? obj)
        {
            return obj is TestId other && Equals(other);
        }

        public static bool operator ==(TestId left, TestId right)
        {
            return left.Equals(right);
        }

        public static bool operator !=(TestId left, TestId right)
        {
            return !left.Equals(right);
        }

        public override int GetHashCode()
        {
            return Value?.GetHashCode() ?? 0;
        }

        public override string ToString()
        {
            return Value?.ToString() ?? "<NULL>";
        }
    }
}
