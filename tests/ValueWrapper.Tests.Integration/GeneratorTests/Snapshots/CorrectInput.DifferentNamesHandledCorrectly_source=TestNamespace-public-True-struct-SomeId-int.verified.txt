#nullable enable

namespace TestNamespace
{
    public readonly partial struct SomeId : IEquatable<SomeId>
    {
        public static SomeId From(int value)
        {
            return new SomeId(value);
        }

        public SomeId(int value)
        {
            Value = value;
        }

        public int Value { get; }

        public bool Equals(SomeId other)
        {
            return EqualityComparer<int>.Default.Equals(Value, other.Value);
        }

        public override bool Equals(object? obj)
        {
            return obj is SomeId other && Equals(other);
        }

        public static bool operator ==(SomeId left, SomeId right)
        {
            return left.Equals(right);
        }

        public static bool operator !=(SomeId left, SomeId right)
        {
            return !left.Equals(right);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }

        public override string ToString()
        {
            return Value.ToString();
        }
    }
}
