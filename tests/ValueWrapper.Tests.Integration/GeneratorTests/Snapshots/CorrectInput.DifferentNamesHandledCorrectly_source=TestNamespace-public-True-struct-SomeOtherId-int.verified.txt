namespace TestNamespace
{
    public readonly partial struct SomeOtherId : IEquatable<SomeOtherId>
    {
        public static SomeOtherId From(int value)
        {
            return new SomeOtherId(value);
        }

        public SomeOtherId(int value)
        {
            Value = value;
        }

        public int Value { get; }

        public bool Equals(SomeOtherId other)
        {
            return EqualityComparer<int>.Default.Equals(Value, other.Value);
        }

        public override bool Equals(object? obj)
        {
            return obj is SomeOtherId other && Equals(other);
        }

        public static bool operator ==(SomeOtherId left, SomeOtherId right)
        {
            return left.Equals(right);
        }

        public static bool operator !=(SomeOtherId left, SomeOtherId right)
        {
            return !left.Equals(right);
        }

        public override int GetHashCode()
        {
            return Value.GetHashCode();
        }

        public override string ToString()
        {
            return Value.ToString();
        }
    }
}
